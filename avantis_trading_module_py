import smtplib

import os

from datetime import datetime

from email.mime.text import MIMEText

from email.mime.multipart import MIMEMultipart

 

class EnhancedProfitManager:

    def __init__(self):

        self.notification_email = os.getenv('NOTIFICATION_EMAIL')

        self.email_password = os.getenv('EMAIL_APP_PASSWORD')

        self.system_start_date = self._get_system_start_date()

       

        # ðŸŽ¯ Dynamic allocation phases

        self.allocation_phases = {

            "growth_focus": {"reinvest": 0.80, "btc_stack": 0.15, "reserve": 0.05},

            "balanced_growth": {"reinvest": 0.70, "btc_stack": 0.20, "reserve": 0.10},

            "wealth_protection": {"reinvest": 0.60, "btc_stack": 0.20, "reserve": 0.20}

        }

   

    def _get_system_start_date(self):

        """Get system start date from environment variable"""

        try:

            start_date_str = os.getenv('SYSTEM_START_DATE', '2025-05-27T00:00:00')

            return datetime.fromisoformat(start_date_str)

        except:

            return datetime.now()

   

    def get_months_running(self):

        """Calculate how many months the system has been running"""

        delta = datetime.now() - self.system_start_date

        return delta.days // 30

   

    def get_dynamic_allocation(self, account_balance):

        """Get dynamic allocation ratios based on system maturity"""

        months = self.get_months_running()

       

        if months <= 6:

            phase_key = "growth_focus"

            phase_name = "Phase 1: Aggressive Growth (80/15/5)"

        elif months <= 12:

            phase_key = "balanced_growth"

            phase_name = "Phase 2: Balanced Approach (70/20/10)"

        else:

            phase_key = "wealth_protection"

            phase_name = "Phase 3: Wealth Protection (60/20/20)"

        

        allocation = self.allocation_phases[phase_key].copy()

       

        return {

            **allocation,

            "phase": phase_name,

            "months_running": months

        }